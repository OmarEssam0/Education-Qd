/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiAuthForgotPasswordRequestResetPasswordOtpPost } from '../fn/password/api-auth-forgot-password-request-reset-password-otp-post';
import { ApiAuthForgotPasswordRequestResetPasswordOtpPost$Params } from '../fn/password/api-auth-forgot-password-request-reset-password-otp-post';
import { apiAuthForgotPasswordResetPasswordPost } from '../fn/password/api-auth-forgot-password-reset-password-post';
import { ApiAuthForgotPasswordResetPasswordPost$Params } from '../fn/password/api-auth-forgot-password-reset-password-post';
import { apiAuthForgotPasswordResetPasswordPost$Plain } from '../fn/password/api-auth-forgot-password-reset-password-post-plain';
import { ApiAuthForgotPasswordResetPasswordPost$Plain$Params } from '../fn/password/api-auth-forgot-password-reset-password-post-plain';
import { apiAuthForgotPasswordValidateResetPasswordOtpPost } from '../fn/password/api-auth-forgot-password-validate-reset-password-otp-post';
import { ApiAuthForgotPasswordValidateResetPasswordOtpPost$Params } from '../fn/password/api-auth-forgot-password-validate-reset-password-otp-post';
import { apiAuthForgotPasswordValidateResetPasswordOtpPost$Plain } from '../fn/password/api-auth-forgot-password-validate-reset-password-otp-post-plain';
import { ApiAuthForgotPasswordValidateResetPasswordOtpPost$Plain$Params } from '../fn/password/api-auth-forgot-password-validate-reset-password-otp-post-plain';
import { ResetPasswordResponse as EducationApplicationUseCasesAuthResetPasswordCommandResetPasswordResponse } from '../models/Education/Application/UseCases/Auth/ResetPasswordCommand/reset-password-response';
import { ValidateOtpResponse as EducationApplicationUseCasesAuthValidateOtpCommandValidateOtpResponse } from '../models/Education/Application/UseCases/Auth/ValidateOtpCommand/validate-otp-response';

@Injectable({ providedIn: 'root' })
export class PasswordService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiAuthForgotPasswordRequestResetPasswordOtpPost()` */
  static readonly ApiAuthForgotPasswordRequestResetPasswordOtpPostPath = '/api/Auth/forgot-password/request-reset-password-otp';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiAuthForgotPasswordRequestResetPasswordOtpPost()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiAuthForgotPasswordRequestResetPasswordOtpPost$Response(params?: ApiAuthForgotPasswordRequestResetPasswordOtpPost$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return apiAuthForgotPasswordRequestResetPasswordOtpPost(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiAuthForgotPasswordRequestResetPasswordOtpPost$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiAuthForgotPasswordRequestResetPasswordOtpPost(params?: ApiAuthForgotPasswordRequestResetPasswordOtpPost$Params, context?: HttpContext): Observable<void> {
    return this.apiAuthForgotPasswordRequestResetPasswordOtpPost$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

  /** Path part for operation `apiAuthForgotPasswordValidateResetPasswordOtpPost()` */
  static readonly ApiAuthForgotPasswordValidateResetPasswordOtpPostPath = '/api/Auth/forgot-password/validate-reset-password-otp';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiAuthForgotPasswordValidateResetPasswordOtpPost$Plain()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiAuthForgotPasswordValidateResetPasswordOtpPost$Plain$Response(params?: ApiAuthForgotPasswordValidateResetPasswordOtpPost$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<EducationApplicationUseCasesAuthValidateOtpCommandValidateOtpResponse>> {
    return apiAuthForgotPasswordValidateResetPasswordOtpPost$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiAuthForgotPasswordValidateResetPasswordOtpPost$Plain$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiAuthForgotPasswordValidateResetPasswordOtpPost$Plain(params?: ApiAuthForgotPasswordValidateResetPasswordOtpPost$Plain$Params, context?: HttpContext): Observable<EducationApplicationUseCasesAuthValidateOtpCommandValidateOtpResponse> {
    return this.apiAuthForgotPasswordValidateResetPasswordOtpPost$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<EducationApplicationUseCasesAuthValidateOtpCommandValidateOtpResponse>): EducationApplicationUseCasesAuthValidateOtpCommandValidateOtpResponse => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiAuthForgotPasswordValidateResetPasswordOtpPost()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiAuthForgotPasswordValidateResetPasswordOtpPost$Response(params?: ApiAuthForgotPasswordValidateResetPasswordOtpPost$Params, context?: HttpContext): Observable<StrictHttpResponse<EducationApplicationUseCasesAuthValidateOtpCommandValidateOtpResponse>> {
    return apiAuthForgotPasswordValidateResetPasswordOtpPost(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiAuthForgotPasswordValidateResetPasswordOtpPost$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiAuthForgotPasswordValidateResetPasswordOtpPost(params?: ApiAuthForgotPasswordValidateResetPasswordOtpPost$Params, context?: HttpContext): Observable<EducationApplicationUseCasesAuthValidateOtpCommandValidateOtpResponse> {
    return this.apiAuthForgotPasswordValidateResetPasswordOtpPost$Response(params, context).pipe(
      map((r: StrictHttpResponse<EducationApplicationUseCasesAuthValidateOtpCommandValidateOtpResponse>): EducationApplicationUseCasesAuthValidateOtpCommandValidateOtpResponse => r.body)
    );
  }

  /** Path part for operation `apiAuthForgotPasswordResetPasswordPost()` */
  static readonly ApiAuthForgotPasswordResetPasswordPostPath = '/api/Auth/forgot-password/reset-password';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiAuthForgotPasswordResetPasswordPost$Plain()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiAuthForgotPasswordResetPasswordPost$Plain$Response(params?: ApiAuthForgotPasswordResetPasswordPost$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<EducationApplicationUseCasesAuthResetPasswordCommandResetPasswordResponse>> {
    return apiAuthForgotPasswordResetPasswordPost$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiAuthForgotPasswordResetPasswordPost$Plain$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiAuthForgotPasswordResetPasswordPost$Plain(params?: ApiAuthForgotPasswordResetPasswordPost$Plain$Params, context?: HttpContext): Observable<EducationApplicationUseCasesAuthResetPasswordCommandResetPasswordResponse> {
    return this.apiAuthForgotPasswordResetPasswordPost$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<EducationApplicationUseCasesAuthResetPasswordCommandResetPasswordResponse>): EducationApplicationUseCasesAuthResetPasswordCommandResetPasswordResponse => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiAuthForgotPasswordResetPasswordPost()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiAuthForgotPasswordResetPasswordPost$Response(params?: ApiAuthForgotPasswordResetPasswordPost$Params, context?: HttpContext): Observable<StrictHttpResponse<EducationApplicationUseCasesAuthResetPasswordCommandResetPasswordResponse>> {
    return apiAuthForgotPasswordResetPasswordPost(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiAuthForgotPasswordResetPasswordPost$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiAuthForgotPasswordResetPasswordPost(params?: ApiAuthForgotPasswordResetPasswordPost$Params, context?: HttpContext): Observable<EducationApplicationUseCasesAuthResetPasswordCommandResetPasswordResponse> {
    return this.apiAuthForgotPasswordResetPasswordPost$Response(params, context).pipe(
      map((r: StrictHttpResponse<EducationApplicationUseCasesAuthResetPasswordCommandResetPasswordResponse>): EducationApplicationUseCasesAuthResetPasswordCommandResetPasswordResponse => r.body)
    );
  }

}
