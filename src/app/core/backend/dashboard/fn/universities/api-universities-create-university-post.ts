/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { CreateUniversityResponse as EducationApplicationUseCasesUniversitiesCreateUniversityCommandCreateUniversityResponse } from '../../models/Education/Application/UseCases/Universities/CreateUniversityCommand/create-university-response';

export interface ApiUniversitiesCreateUniversityPost$Params {
      body?: {
'UniversityName'?: string;
'Email'?: string;
'Description'?: string;
'PhoneNumber'?: string;
'Address'?: string;
'WebAddress'?: string;
'BannerImage'?: Blob;
'LogoImage'?: Blob;
'IsPaid'?: boolean;
'PaidUntil'?: string;
}
}

export function apiUniversitiesCreateUniversityPost(http: HttpClient, rootUrl: string, params?: ApiUniversitiesCreateUniversityPost$Params, context?: HttpContext): Observable<StrictHttpResponse<EducationApplicationUseCasesUniversitiesCreateUniversityCommandCreateUniversityResponse>> {
  const rb = new RequestBuilder(rootUrl, apiUniversitiesCreateUniversityPost.PATH, 'post');
  if (params) {
    rb.body(params.body, 'multipart/form-data');
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'text/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<EducationApplicationUseCasesUniversitiesCreateUniversityCommandCreateUniversityResponse>;
    })
  );
}

apiUniversitiesCreateUniversityPost.PATH = '/api/Universities/CreateUniversity';
